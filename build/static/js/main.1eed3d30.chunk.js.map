{"version":3,"sources":["utils/def_house_img.jpg","PoweredBy/PoweredBy.module.css","PoweredBy/TechCards/TechCard.module.css","actions/actionCreators.js","utils/simpleFunctions.js","utils/makeCustomRequests.js","Bar/Bar.js","ChartsNew/BarChartCustom/BarChartCustom.js","ChartsNew/LineChartCustom/LineChartCustom.js","CityPanel/CityPanel.js","Content/Content.js","ParallaxEffect/ParallaxEffect.js","PoweredBy/TechCards/TechCard.js","PoweredBy/TechInfo.js","PoweredBy/PoweredBy.js","App.js","serviceWorker.js","index.js","Bar/Bar.module.css","Content/Content.module.css","CityPanel/CityPanel.module.css","ParallaxEffect/ParallaxEffect.module.css"],"names":["module","exports","weatherObj","type","payload","getDateFromUNIX","unix","Date","toLocaleString","split","replace","img_url","unix_timestamp","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","currentDayData","currentTime","dt","sunrise","sunset","daysArr","data","map","dayData","dayTempData","temp","Math","round","morn","day","eve","night","shift","arr","i","Hour","sky","skyID","dayLight","window","Skycons","WIND","RAIN","SLEET","SNOW","CLEAR_DAY","CLEAR_NIGHT","PARTLY_CLOUDY_DAY","PARTLY_CLOUDY_NIGHT","CLOUDY","FOG","Error","string","charAt","toUpperCase","slice","getCityCoordinates","city","a","fetch","process","resGeoCoordinates","json","category","results","components","_category","_type","lat","geometry","lng","getWeatherData","coords","resWeather","ok","hourTempArr","hourly","simpleFuncs","push","Temperature","console","log","JSON","stringify","getCityImage","resImages","unified_img_url","alt","total","def_img","urls","small","alt_description","Bar","onAddForecast","onRequestSend","onResponseReceived","weatherData","React","useContext","WeatherContext","useState","helperText","setHelperText","animationCLass","setAnimationClass","isSubmitButtonDisabled","setSubmitButtonDisabled","validation","WD","length","forEach","entry","place","handleSubmit","e","preventDefault","target","value","trim","substring","makeCustomRequests","error","styles","SunAnimation","setTimeout","image","current","weather","main","id","desc","description","daily","tempHourArr","forecast","message","name","className","Sun","src","Form","onSubmit","data-test","spellCheck","placeholder","onChange","disabled","CustomizedAxisTick","this","props","x","y","transform","dy","fill","Component","BarChartCustom","ChartContainer","BarChartContainer","extractForecast","margin","top","right","left","bottom","strokeDasharray","dataKey","height","tick","interval","domain","minTickGap","label","position","angle","labelFormatter","lbl","formatter","avr","separator","LineChartCustom","LineChartContainer","extractDailyData","allowDecimals","stroke","activeDot","r","CityPanel","canvasRef","createRef","useEffect","elems","document","querySelectorAll","M","Modal","init","skycons","add","SimpleFuncs","play","drawCurrentWeather","CityCard","UpperPart","img_alt","width","href","Content","ref","Temp","Desc","weatherList","isLoading","spinner","CenterChild","chunk","key","ParallaxEffect","addEventListener","Parallax","fullWidth","myParallax","TechCard","rel","TechCardClass","title","techArr","PoweredBy","state","techData","technologyBox","tech","createContext","reducer","action","newState","weatherArr","App","useReducer","dispatch","Provider","actions","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1eed3d30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/def_house_img.7daa589f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"technologyBox\":\"PoweredBy_technologyBox__1SpIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TechCardClass\":\"TechCard_TechCardClass__3sff_\"};","export const GET_CITY_WEATHER = (weatherObj) => {\r\n    return {\r\n        type: 'GET_CITY_WEATHER',\r\n        payload: weatherObj\r\n    }\r\n}\r\n\r\nexport const WAIT_LOADING = () => {\r\n    return {\r\n        type: 'WAIT_LOADING'\r\n    }\r\n}\r\n\r\nexport const RESPONSE_RECEIVED = () => {\r\n    return {\r\n        type: 'RESPONSE_RECEIVED'\r\n    }\r\n}\r\n\r\nexport default {\r\n    GET_CITY_WEATHER,\r\n    WAIT_LOADING,\r\n    RESPONSE_RECEIVED\r\n}\r\n","export const unifyImg = (img_url) => {\r\n    img_url = img_url.replace('&w=400', '&w=300&h=200')\r\n    img_url = img_url.replace('&fit=max', '&fit=crop')\r\n    return img_url\r\n}\r\n\r\nexport const fromUnixToStr = (unix_timestamp) => {\r\n    let date = new Date(unix_timestamp * 1000);\r\n    let hours = date.getHours();\r\n    let minutes = \"0\" + date.getMinutes();\r\n    let seconds = \"0\" + date.getSeconds();\r\n    let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const getDateFromUNIX = (unix) => {\r\n    const milliseconds = unix * 1000;\r\n\r\n    const dateObject = new Date(milliseconds);\r\n\r\n    const humanDateTimeFormat = dateObject.toLocaleString('en-GB'); //2019/12/9 10:30:15\r\n\r\n    const humanDateFormat = humanDateTimeFormat.split(',')[0];\r\n\r\n    return humanDateFormat.replace(/\\//g, \"-\");\r\n\r\n}\r\n\r\nexport const isDayLight = (currentDayData) => {\r\n    // const currentTime = 1601377777;   //TEST\r\n\r\n    const currentTime = currentDayData.dt;\r\n    const sunrise = currentDayData.sunrise;\r\n    const sunset = currentDayData.sunset;\r\n\r\n    if (sunrise < currentTime && currentTime < sunset) return true;\r\n    else return false;\r\n\r\n}\r\n\r\nexport const refineData = (daysArr) => {\r\n\r\n    const calculateAvgTemp = (dayTempData) => {\r\n        const avgTemp = Math.round((dayTempData.morn + dayTempData.day + dayTempData.eve + dayTempData.night) / 4);\r\n        return avgTemp;\r\n    }\r\n\r\n\r\n    let data = daysArr.map(dayData => {\r\n        return {\r\n            \"date\": getDateFromUNIX(dayData.dt),\r\n            \"avr\": calculateAvgTemp(dayData.temp)\r\n        }\r\n    })\r\n\r\n    data.shift();\r\n    return data;\r\n}\r\n\r\nexport const formatData = (arr) => {\r\n    for (let i in arr) {\r\n        arr[i].Hour = arr[i].Hour.split(\":\")[0]\r\n    }\r\n}\r\n\r\nexport const pickProperSVG = (sky, skyID, dayLight) => {\r\n    switch (sky) {\r\n        case 'Thunderstorm': return window.Skycons.WIND;\r\n        case 'Drizzle': return window.Skycons.RAIN;\r\n        case 'Rain': return window.Skycons.SLEET;\r\n        case 'Snow': return window.Skycons.SNOW;\r\n        case 'Clear': {\r\n            if (dayLight)\r\n                return window.Skycons.CLEAR_DAY;\r\n            else\r\n                return window.Skycons.CLEAR_NIGHT;\r\n        }\r\n\r\n        case 'Clouds': {\r\n            // console.log(\"SkyID: \" + skyID + \" \" + typeof(skyID))\r\n            if (skyID === 801 || skyID === 802) {\r\n                if (dayLight) return window.Skycons.PARTLY_CLOUDY_DAY;\r\n                else return window.Skycons.PARTLY_CLOUDY_NIGHT;\r\n            }\r\n            if (skyID === 803 || skyID === 804)\r\n                return window.Skycons.CLOUDY;\r\n            break;\r\n        }\r\n\r\n        default: {\r\n            if (skyID >= 700) return window.Skycons.FOG;\r\n            else throw new Error(\"Not relevant current weather, caught in pickProperSVG function \")\r\n        }\r\n    }\r\n}\r\n\r\nexport const capitalizeFirst = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n\r\nexport default {\r\n    unifyImg,\r\n    fromUnixToStr,\r\n    getDateFromUNIX,\r\n    isDayLight,\r\n    refineData,\r\n    formatData,\r\n    pickProperSVG,\r\n    capitalizeFirst,\r\n}","import def_img from './def_house_img.jpg'\r\nimport simpleFuncs from './simpleFunctions'\r\n\r\n\r\nexport const getCityCoordinates = async (city) => {\r\n   \r\n    let resGeoCoordinates = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=${process.env.REACT_APP_GEO}&q=${city}&no_annotations=1&limit=1`)\r\n    resGeoCoordinates = await resGeoCoordinates.json()\r\n    const category = resGeoCoordinates.results[0].components._category\r\n    const type = resGeoCoordinates.results[0].components._type\r\n\r\n    if (category !== \"place\" || type !== \"city\") {\r\n        throw new Error(\"OpenCage Geocoding API cannot find such city!\")\r\n    }\r\n\r\n    return {\r\n        lat: resGeoCoordinates.results[0].geometry.lat,\r\n        lng: resGeoCoordinates.results[0].geometry.lng\r\n    }\r\n}\r\n\r\nexport const getWeatherData = async (coords) => {\r\n    let resWeather = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${coords.lat}&lon=${coords.lng}&exclude=minutely&appid=${process.env.REACT_APP_WEATHER}&units=metric`)\r\n\r\n    if (!resWeather.ok) {\r\n        throw new Error(\"Problem with Open Weather API\")\r\n    }\r\n\r\n    resWeather = await resWeather.json()\r\n\r\n    let hourTempArr = [];\r\n\r\n    for (let i in resWeather.hourly) {\r\n        let date = simpleFuncs.fromUnixToStr(resWeather.hourly[i].dt)\r\n        hourTempArr.push({\r\n            Hour: date,\r\n            Temperature: resWeather.hourly[i].temp\r\n        })\r\n        if (date === \"0:00:00\") break;\r\n    }\r\n\r\n    simpleFuncs.formatData(hourTempArr)\r\n\r\n    console.log(\"TONKA\")\r\n    console.log(resWeather)\r\n    console.log(JSON.stringify(resWeather))\r\n    console.log(hourTempArr)\r\n    console.log(JSON.stringify(hourTempArr))\r\n\r\n    return [resWeather, hourTempArr]\r\n}\r\n\r\nexport const getCityImage = async (city) => {\r\n    let resImages = await fetch(`https://api.unsplash.com/search/photos?client_id=${process.env.REACT_APP_IMAGES}&page=1&per_page=3&query=${city}`)\r\n    resImages = await resImages.json()\r\n\r\n    let unified_img_url = \"\";\r\n    let alt = \"\";\r\n\r\n    if (resImages.total === 0) {\r\n        unified_img_url = def_img\r\n        //\"https://www.developco.com/wp-content/uploads/2015/08/CCCC-home-2-500x200.jpg\"\r\n        alt = \"Unfortunately Unsplash API does not provide images for that town.\"\r\n    } else {\r\n        unified_img_url = simpleFuncs.unifyImg(resImages.results[2].urls.small)\r\n        alt = resImages.results[2].alt_description\r\n    }\r\n\r\n    return [unified_img_url, alt]\r\n}\r\n\r\nexport default {\r\n    getWeatherData,\r\n    getCityCoordinates,\r\n    getCityImage\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { WeatherContext } from '../App';\r\nimport makeCustomRequests from '../utils/makeCustomRequests';\r\nimport simpleFuncs from '../utils/simpleFunctions';\r\nimport styles from './Bar.module.css';\r\n\r\n\r\nconst Bar = ({ onAddForecast, onRequestSend, onResponseReceived }) => {\r\n\r\n    \r\n    \r\n\r\n    const weatherData = React.useContext(WeatherContext)\r\n    const [helperText, setHelperText] = useState(null)\r\n    const [animationCLass, setAnimationClass] = useState(null)\r\n    const [isSubmitButtonDisabled, setSubmitButtonDisabled] = useState(true)\r\n\r\n    const animate = () => {\r\n        setAnimationClass(styles.SunAnimation)\r\n\r\n        setTimeout(() => {\r\n            setAnimationClass(\"\")\r\n        }, 2500)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     helperEl = document.getElementById(\"helper-text\");\r\n    // })\r\n\r\n    const handleCityChange = (e) => {\r\n        if (e.target.value) {\r\n            setSubmitButtonDisabled(false)\r\n        }\r\n        else setSubmitButtonDisabled(true)\r\n    }\r\n\r\n    const validation = (city) => {\r\n        \r\n        const WD = weatherData\r\n        \r\n        if (WD.length > 0) {\r\n            WD.forEach(\r\n                entry => {\r\n                    if (entry.place.city === city) {\r\n                        throw new Error(\"You already have data for that city! (Client input error)\")\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        try {\r\n            //===================   Form process    =======================\r\n            e.preventDefault();\r\n\r\n            let city = e.target[\"city\"].value\r\n\r\n            city = city.trim()\r\n            city = city[0].toUpperCase() + city.substring(1)\r\n            validation(city)\r\n\r\n            setSubmitButtonDisabled(true)\r\n            e.target[\"city\"].value = \"\"\r\n            setHelperText(\"\");\r\n            //====================    Get wanted data   ====================\r\n            let resWeather;\r\n            let hourTempArr; \r\n            let unified_img_url;\r\n            let alt;\r\n            let coords;\r\n\r\n            \r\n            \r\n            \r\n            \r\n            \r\n            \r\n            try{\r\n                \r\n                \r\n                coords = await makeCustomRequests.getCityCoordinates(city);\r\n                \r\n                [resWeather, hourTempArr] = await makeCustomRequests.getWeatherData(coords);\r\n    \r\n                [unified_img_url, alt] = await makeCustomRequests.getCityImage(city);\r\n                \r\n                  \r\n            }catch(e){\r\n                \r\n                console.error( e )\r\n            }\r\n            \r\n            \r\n            onRequestSend();\r\n           \r\n\r\n           \r\n\r\n           \r\n\r\n            //====================    Sun animation   ====================\r\n\r\n            animate()\r\n\r\n            //====================  Compose Weather Object   ========================\r\n\r\n            let weatherObj = {\r\n                place: {\r\n                    city: city,\r\n                    lat: coords.lat,\r\n                    lng: coords.lng\r\n                },\r\n                image: {\r\n                    img_url: unified_img_url,\r\n                    alt: alt\r\n                },\r\n                current: {\r\n                    temp: resWeather.current.temp,\r\n                    sky: resWeather.current.weather[0].main,\r\n                    skyID: resWeather.current.weather[0].id,\r\n                    desc: resWeather.current.weather[0].description,\r\n                    dayLight: simpleFuncs.isDayLight(resWeather.current)\r\n                },\r\n                daily: {\r\n                    tempHourArr: hourTempArr\r\n                },\r\n                forecast: simpleFuncs.refineData(resWeather.daily)\r\n            }\r\n\r\n\r\n            onAddForecast(weatherObj);\r\n            onResponseReceived();\r\n\r\n         \r\n        } catch (e) {\r\n            setHelperText(e.message) \r\n            console.error(e.name + ' caught! \\n' + e);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Bar}>\r\n            <h1>Clima</h1>\r\n            <div className={`${styles.Sun} ${animationCLass}`}  >\r\n                <img src=\"imgs/sun/stylized-sun-bg.png\" alt=\"sun\" />\r\n            </div>\r\n            <form className={styles.Form} onSubmit={handleSubmit} data-test=\"bar-form\">\r\n                <input type=\"text\"\r\n                    data-test=\"city-input\"\r\n                    spellCheck=\"false\"\r\n                   \r\n                    name=\"city\"\r\n                    placeholder=\"City\"\r\n                    onChange={handleCityChange} />\r\n                <span className=\"helper-text left-align red-text\" data-test=\"helper-span\" >{helperText}</span>\r\n                <button className=\"waves-effect   btn teal lighten-2\" disabled={isSubmitButtonDisabled} data-test=\"submit-button\" type=\"submit\">Get forecast</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar\r\n","import React, { Component, useContext } from 'react';\r\nimport { Bar, BarChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { WeatherContext } from '../../App';\r\nimport styles from '../../CityPanel/CityPanel.module.css';\r\n\r\n\r\nclass CustomizedAxisTick extends Component {\r\n    render() {\r\n        const { x, y, payload } = this.props;\r\n\r\n        return (\r\n            <g transform={`translate(${x},${y})`}>\r\n                <text x={0} y={0} dy={16} fill=\"#666\" transform=\"rotate(24)\">{payload.value}</text>\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst BarChartCustom = (props) => {\r\n\r\n    let weatherData = useContext(WeatherContext)\r\n\r\n    const extractForecast = (city) => {\r\n        const WD = weatherData\r\n        for (let i in WD) {\r\n            if (WD[i].place.city === city) return WD[i].forecast\r\n        }\r\n\r\n        throw new Error(\"extractDataFromStore could not find relative data!\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ChartContainer + \" \" + styles.BarChartContainer}>\r\n            <h6>7-days forecast</h6>\r\n            <ResponsiveContainer >\r\n                <BarChart\r\n                    data={extractForecast(props.city)}\r\n                    margin={{ top: 10, right: 10, left: 10, bottom: 10 }}>\r\n\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" height={60} tick={<CustomizedAxisTick />} interval={0} />\r\n                    <YAxis type=\"number\" domain={['dataMin - 2', 'auto']} minTickGap={3} label={{ value: \"Average temperature \\u2103\", position: \"insideLeft\", angle: -90, dy: 60 }} />\r\n                    <Tooltip labelFormatter={lbl => { return null }} formatter={(value, name, props) => { return [`${props.payload.avr}\\u2103`, `Average temperature on ${props.payload.date}`] }} separator=\" is \" />\r\n                    <Bar dataKey=\"avr\" fill=\"#4DB6AC\" />\r\n                </BarChart>\r\n            </ResponsiveContainer >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChartCustom\r\n\r\n","import React, { useContext } from 'react';\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { WeatherContext } from '../../App';\r\nimport styles from '../../CityPanel/CityPanel.module.css';\r\n\r\n\r\nconst LineChartCustom = (props) => {\r\n\r\n    let weatherData = useContext(WeatherContext)\r\n\r\n    const extractDailyData = (city) => {\r\n        const WD = weatherData\r\n        for (let i in WD) {\r\n            if (WD[i].place.city === city) return WD[i].daily.tempHourArr\r\n        }\r\n        throw new Error(\"extractDataFromStore could not find relative data!\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ChartContainer + \" \" + styles.LineChartContainer}>\r\n            <h6>Daily temperature</h6>\r\n            <ResponsiveContainer >\r\n                <LineChart\r\n                    data={extractDailyData(props.city)}\r\n                    margin={{ top: 10, right: 10, left: 10, bottom: 10 }}>\r\n\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"Hour\" label={{ value: \"Time in hours\", position: \"insideRight\", dy: 20 }} />\r\n                    <YAxis type=\"number\" domain={[\"auto\", \"auto\"]} allowDecimals={false} label={{ value: \"Temperature \\u2103\", position: \"insideLeft\", angle: -90, dy: 40 }} />\r\n                    <Tooltip labelFormatter={lbl => { return \"\" }} formatter={(value, name, props) => { return [`${Math.round(value)}\\u2103`, `Temperature at ${props.payload.Hour} o'clock`] }} separator=\" is \" />\r\n                    <Line type=\"monotone\" dataKey=\"Temperature\" stroke=\"#4DB6AC\" activeDot={{ r: 8 }} />\r\n                </LineChart>\r\n            </ResponsiveContainer >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineChartCustom\r\n","import M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport BarChartCustom from '../ChartsNew/BarChartCustom/BarChartCustom';\r\nimport LineChartCustom from '../ChartsNew/LineChartCustom/LineChartCustom';\r\nimport SimpleFuncs from '../utils/simpleFunctions';\r\nimport styles from './CityPanel.module.css';\r\n\r\n\r\nconst CityPanel = (props) => {\r\n    const canvasRef = React.createRef();\r\n\r\n    const drawCurrentWeather = () => {\r\n\r\n        var skycons = new window.Skycons({ \"color\": \"rgb(77, 182, 172)\" });\r\n        skycons.add( canvasRef.current, SimpleFuncs.pickProperSVG( props.sky,  props.skyID,  props.dayLight));\r\n        skycons.play();\r\n    }\r\n\r\n    const modalInitialization = () => {\r\n        document.addEventListener('DOMContentLoaded', function (e) {\r\n\r\n            const elems = document.querySelector('.modal');\r\n            M.Modal.init(elems, {});\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const elems = document.querySelectorAll('.modal');\r\n        M.Modal.init(elems, {});\r\n\r\n         drawCurrentWeather();\r\n    })\r\n\r\n    return (\r\n        <div className={styles.CityCard}>\r\n                <div className=\"col s12 m4\" >\r\n                    <div className=\"card\">\r\n                        <div className={\"card-image \" + styles.UpperPart}>\r\n                            <img src={ props.img_url} alt={ props.img_alt} width=\"300\" height=\"200\" />\r\n                            <span className=\"card-title \">{ props.city}</span>\r\n                            <a className=\"btn-floating  halfway-fab waves-effect  teal lighten-2 modal-trigger\" href={\"#\" +  props.city + \"Modal\"} ><i className=\"material-icons\">add</i></a>\r\n                        </div>\r\n                        <div className={\"card-content \" + styles.Content}>\r\n                            <div>\r\n                                <canvas ref={ canvasRef} width=\"300\" height=\"300\"/>\r\n                            </div>\r\n                            <div className={styles.Temp}>{Math.round( props.temp)+\"\\u00B0\"}</div>\r\n                            <div className={styles.Desc}>{SimpleFuncs.capitalizeFirst(props.desc)}</div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n\r\n\r\n                <div id={ props.city + \"Modal\"} className={\"modal modal-fixed-footer \" + styles.Modal}>\r\n                    <div className=\"modal-content\">\r\n                        <h4>{ props.city}</h4>\r\n                        <LineChartCustom city={ props.city} />\r\n                        <BarChartCustom city={ props.city} />\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\">OK</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nCityPanel.propTypes = {\r\n    city: PropTypes.string.isRequired,\r\n    sky: PropTypes.string.isRequired,\r\n    temp: PropTypes.number.isRequired,\r\n    img_url: PropTypes.string.isRequired,\r\n    img_alt: PropTypes.string,\r\n}\r\n\r\nexport default CityPanel\r\n","import React, { useContext } from 'react';\r\nimport { WeatherContext } from '../App';\r\nimport CityPanel from '../CityPanel/CityPanel';\r\nimport styles from './Content.module.css';\r\n\r\nconst Content = ({ isLoading }) => {\r\n\r\n    let weatherData = useContext(WeatherContext)\r\n\r\n    const spinner = (\r\n        <div className={styles.CenterChild}>\r\n            <div className=\"preloader-wrapper big active \">\r\n                <div className=\"spinner-layer spinner-blue-only\">\r\n                    <div className=\"circle-clipper left\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"gap-patch\">\r\n                        <div className=\"circle\"></div>\r\n                    </div><div className=\"circle-clipper right\">\r\n                        <div className=\"circle\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    let weatherList;\r\n\r\n\r\n    if (weatherData.length === 0) {\r\n        weatherList = (\r\n            <div className={styles.CenterChild}>\r\n                <div><span>Please enter city.</span></div>\r\n            </div>\r\n        )\r\n    } else {\r\n        weatherList = (\r\n            weatherData.map(chunk => {\r\n                return <CityPanel\r\n                    key={chunk.place.city}\r\n                    city={chunk.place.city}\r\n                    sky={chunk.current.sky}\r\n                    skyID={chunk.current.skyID}\r\n                    desc={chunk.current.desc}\r\n                    dayLight={chunk.current.dayLight}\r\n                    temp={chunk.current.temp}\r\n                    img_url={chunk.image.img_url}\r\n                    img_alt={chunk.image.alt}\r\n                    tempHourArr={chunk.daily.tempHourArr} />\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.Content}>\r\n            <div className=\"row\">\r\n                {isLoading ? spinner : weatherList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport React, { Component } from 'react';\r\nimport styles from './ParallaxEffect.module.css';\r\n\r\n\r\n\r\nclass ParallaxEffect extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('DOMContentLoaded', function(e) {\r\n            const elems = document.querySelectorAll('.parallax');\r\n            M.Parallax.init(elems, {    });\r\n          });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"parallax-container \" + styles.fullWidth + \" \" + styles.myParallax}>\r\n                <div className=\"parallax\">\r\n                    <img src=\"imgs/ParallaxEffect/parallax-effect-1.jpg\" alt=\"Just cool parallax effect\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParallaxEffect\r\n","import React from 'react';\r\nimport styles from './TechCard.module.css';\r\n\r\n\r\nconst TechCard = ({ href, src, alt }) => {\r\n    return (\r\n        <a href={href} target=\"_blank\" rel=\"noopener\" className={ \"col s12 m3 \" + styles.TechCardClass}>\r\n            <img src={src} alt={alt} title={alt} />\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default TechCard\r\n","const techArr = [\r\n    {\r\n        alt: \"React Official Website\",\r\n        src: \"imgs/PoweredBy/react-logo.png\",\r\n        href:\"https://reactjs.org/\",\r\n    },\r\n    {\r\n        alt: \"Redux Official Website\",\r\n        src: \"imgs/PoweredBy/redux-logo.png\",\r\n        href: \"https://redux.js.org/\",\r\n    },\r\n    {\r\n        alt: \"Jest testing library official website\",\r\n        src: \"imgs/PoweredBy/jest-logo.png\",\r\n        href: \"https://jestjs.io/\",\r\n    },\r\n    {\r\n        alt: \"Enzyme testing library official website\",\r\n        src: \"imgs/PoweredBy/enzyme-logo.png\",\r\n        href: \"https://enzymejs.github.io/enzyme/\",\r\n    },\r\n    {\r\n        alt: \"Materialize-css Official Website\",\r\n        src: \"imgs/PoweredBy/materialize-logo.png\",\r\n        href: \"https://materializecss.com/\",\r\n    },\r\n    {\r\n        alt: \"WebdriverIO testing library official website\",\r\n        src: \"imgs/PoweredBy/webdriverio-logo.png\",\r\n        href: \"https://webdriver.io/\",\r\n    },\r\n    {\r\n        alt: \"Nivo visual library official website\",\r\n        src: \"imgs/PoweredBy/nivo-logo.png\",\r\n        href: \"https://nivo.rocks/\",\r\n    },\r\n    {\r\n        alt: \"Green Sock GSAP animation library official website\",\r\n        src: \"imgs/PoweredBy/gsap-logo.png\",\r\n        href: \"https://greensock.com/gsap/\"\r\n    },\r\n]\r\n\r\nexport default techArr","import React, { Component } from 'react'\r\nimport styles from './PoweredBy.module.css'\r\nimport TechCard from './TechCards/TechCard'\r\nimport techData from './TechInfo'\r\n\r\n\r\nexport class PoweredBy extends Component {\r\n\r\n    state = {\r\n        data: techData\r\n    }   \r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.technologyBox}>\r\n                <div className=\"row \">               \r\n                    \r\n                    {this.state.data.map( (tech, i) => ( <TechCard \r\n                            data-test=\"tech-card-component\"\r\n                            href = {tech.href}\r\n                            src = {tech.src}\r\n                            alt = {tech.alt} \r\n                            key = {i}\r\n                        /> ))}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PoweredBy\r\n\r\n\r\n","import React from 'react';\nimport actions from './actions/actionCreators';\nimport './App.css';\nimport Bar from './Bar/Bar';\nimport Content from './Content/Content';\nimport ParallaxEffect from './ParallaxEffect/ParallaxEffect';\nimport PoweredBy from './PoweredBy/PoweredBy';\n\nexport const WeatherContext = React.createContext([]);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n\n    case 'GET_CITY_WEATHER': {\n\n      const weatherObj = action.payload\n      const newState = { isLoading: state.isLoading, weatherArr: [...state.weatherArr, weatherObj] }\n      console.log(\"Reducer newState\")\n      console.log(newState)\n      return newState;\n\n    }\n\n    case 'WAIT_LOADING': {\n      return { ...state, isLoading: true }\n    }\n\n    case 'RESPONSE_RECEIVED': {\n      return { ...state, isLoading: false }\n    }\n\n    default:\n      throw new Error(`Invalid action type ${action.type}`)\n  }\n}\n\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, { isLoading: false, weatherArr: [] })\n\n  // example const setLanguage = (lang) => { return dispatch({type: \"setLanguage\", payload: lang}) }\n\n  const onAddForecast = (weatherObj) => { return dispatch(actions.GET_CITY_WEATHER(weatherObj))  }\n  const onRequestSend = () => { return dispatch(actions.WAIT_LOADING())  }\n  const onResponseReceived = () => { return dispatch(actions.RESPONSE_RECEIVED())}\n\n  React.useEffect(() => {\n    // console.log(\"Weather array\")\n    // console.log(JSON.stringify(state.weatherArr))\n  })\n\n  return (\n    <div className=\"App container\" >\n\n      <WeatherContext.Provider value = {state.weatherArr}>\n        <Bar \n          onResponseReceived={onResponseReceived} \n          onRequestSend={onRequestSend}\n          onAddForecast={onAddForecast}  />\n        <Content isLoading = {state.isLoading} />\n      </WeatherContext.Provider>\n\n      <ParallaxEffect />\n      <PoweredBy />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"materialize-css/dist/css/materialize.min.css\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bar\":\"Bar_Bar__1bYaA\",\"Form\":\"Bar_Form__1eHd9\",\"Sun\":\"Bar_Sun__2JkO-\",\"SunAnimation\":\"Bar_SunAnimation__3pB6w\",\"rotate360\":\"Bar_rotate360__1GUqU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__1IAlg\",\"CenterChild\":\"Content_CenterChild__chKlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CityCard\":\"CityPanel_CityCard__1H25u\",\"UpperPart\":\"CityPanel_UpperPart__3LRQ3\",\"Content\":\"CityPanel_Content__4bsWl\",\"Temp\":\"CityPanel_Temp__1MBHg\",\"Desc\":\"CityPanel_Desc__3duyA\",\"Modal\":\"CityPanel_Modal__qOUjo\",\"ChartContainer\":\"CityPanel_ChartContainer__1pRrb\",\"LineChartContainer\":\"CityPanel_LineChartContainer__1jeZc\",\"BarChartContainer\":\"CityPanel_BarChartContainer__3hg_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myParallax\":\"ParallaxEffect_myParallax__3_JLV\",\"fullWidth\":\"ParallaxEffect_fullWidth__sXmju\"};"],"sourceRoot":""}